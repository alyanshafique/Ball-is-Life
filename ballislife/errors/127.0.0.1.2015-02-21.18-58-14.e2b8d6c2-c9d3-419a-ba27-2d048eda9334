(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> Shape of passed values is (0, 0), indices imply (5, 0)"
p3
sS'layer'
p4
S'/Users/AlyanShafique/Documents/web2py/web2py/applications/ballislife/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\nimport requests\nimport json as simplejson\nimport pandas as pd\nimport os\n\n"""\n\nRefer: https://docs.python.org/2/library/json.html\n\nfilename = open(\'../Models/team_players.json\', \'r\')\n\nread_file = filename.read()\n\ny=json.loads(read_file)\n"""\n\nplayers = []\nplayer_stats = {\'name\':None,\'avg_dribbles\':None,\'avg_touch_time\':None,\'avg_shot_distance\':None,\'avg_defender_distance\':None}\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    test = \'My Thumbnail\'\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\n\ndef scores():\n    test = \'My Thumbnail\'\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\ndef team_players():\n    return(dict(a="a"))\n\ndef find_stats(name,player_id):\n    url = \'http://stats.nba.com/stats/playerdashptshotlog?\'+ \\\n    \'DateFrom=&DateTo=&GameSegment=&LastNGames=0&LeagueID=00&\' + \\\n    \'Location=&Month=0&OpponentTeamID=0&Outcome=&Period=0&\' + \\\n    \'PlayerID=\'+player_id+\'&Season=2014-15&SeasonSegment=&\' + \\\n    \'SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=\'\n    \n    #Create Dict based on JSON response\n    response = requests.get(url)\n    shots = response.json()[\'resultSets\'][0][\'rowSet\']\n    data = simplejson.loads(response.text)\n    \n    #Create df from data and find averages \n    headers = data[\'resultSets\'][0][\'headers\']\n    shot_data = data[\'resultSets\'][0][\'rowSet\']\n    df = pd.DataFrame(shot_data,columns=headers) \n    avg_def = df[\'CLOSE_DEF_DIST\'].mean(axis=1)\n    avg_dribbles = df[\'DRIBBLES\'].mean(axis=1)\n    avg_shot_distance = df[\'SHOT_DIST\'].mean(axis=1)\n    avg_touch_time = df[\'TOUCH_TIME\'].mean(axis=1)\n     \n    """#add averages to dictionary\n    player_stats[\'name\'] = name\n    player_stats[\'avg_defender_distance\']=avg_def\n    player_stats[\'avg_shot_distance\'] = avg_shot_distance\n    player_stats[\'avg_touch_time\'] = avg_touch_time\n    player_stats[\'avg_dribbles\'] = avg_dribbles\n    players.append(player_stats.copy())"""\n\ndef stats():\n    print os.getcwd()\n    with open (\'applications/ballislife/static/team_players.json\') as f:\n        data=f.read()\n        print (\'+++++++++++++++++++++++\')\n        z=simplejson.dumps(data)\n        print (\'====================\')\n        print z\n    #NBA Stats API using selected player ID\n    #for x in teams:\n    #    for y in teams[x]:\n    #        find_stats(y,teams[x][y])\n    find_stats(\'stephen curry\',\'201939\');\n    cols = [\'name\',\'avg_defender_distance\',\'avg_dribbles\',\'avg_shot_distance\',\'avg_touch_time\']\n    df = pd.DataFrame(players,columns = cols)\n\n    df.head()\n\ndef top_players():\n    test = \'My Thumbnail\'\n    response.flash = T("Welcome to web2py!")\n    return dict(message=T(\'Hello World\'))\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login() \ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\nresponse._vars=response._caller(stats)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/AlyanShafique/Documents/web2py/web2py/gluon/restricted.py", line 226, in restricted\n    exec ccode in environment\n  File "/Users/AlyanShafique/Documents/web2py/web2py/applications/ballislife/controllers/default.py", line 152, in <module>\n  File "/Users/AlyanShafique/Documents/web2py/web2py/gluon/globals.py", line 393, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/AlyanShafique/Documents/web2py/web2py/applications/ballislife/controllers/default.py", line 94, in stats\n    df = pd.DataFrame(players,columns = cols)\n  File "/Applications/anaconda/lib/python2.7/site-packages/pandas/core/frame.py", line 255, in __init__\n    copy=copy)\n  File "/Applications/anaconda/lib/python2.7/site-packages/pandas/core/frame.py", line 367, in _init_ndarray\n    return create_block_manager_from_blocks([values.T], [columns, index])\n  File "/Applications/anaconda/lib/python2.7/site-packages/pandas/core/internals.py", line 3230, in create_block_manager_from_blocks\n    construction_error(tot_items, blocks[0].shape[1:], axes, e)\n  File "/Applications/anaconda/lib/python2.7/site-packages/pandas/core/internals.py", line 3211, in construction_error\n    passed,implied))\nValueError: Shape of passed values is (0, 0), indices imply (5, 0)\n'
p11
s.